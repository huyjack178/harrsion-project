@using Fanex.BetList.Core.Entities
@using Fanex.BetList.Core.Factories
@using Fanex.BetList.Core.Builder
@using Fanex.BetList.Example.MVC.ViewModel
@using Fanex.BetList.Core.TicketHelper
@using Fanex.BetList.Example.Extension.BetListHTMLBuilderExt
@using Fanex.BetList.ColossusBets.Builder;
@model BetListData
@{
    ViewBag.Title = "11 New Bet Types";


    IList<ITicket> tickets = (Model != null) ? Model.Tickets : (IList<ITicket>)new List<Ticket>();
    List<ITicketData> ticketData = Model.TicketData;

    var factory = new BetListHTMLFactory();
    BetListHTMLBuilder builder = factory.CreateBuilder();

    ITicketHelper ticketHelper = new TicketHelper();

    GetCachePropertyById funcGetOddsTypeName = CacheRef.GetOddsTypeName;

    var isShowScoreMap = Model.BetTypeId == 145 || Model.BetTypeId == 146 || Model.BetTypeId == 151;

    var rowIndex = 0;
}

@using (Html.BeginForm())
{
    <div class="panel panel-default">

        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3">
                    @Html.DropDownListFor(m => m.BetTypeId, (IEnumerable<SelectListItem>)ViewBag.BetTypes, "All", new { @class = "form-control" })
                </div>
                <div class="col-lg-3">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <span class="alert alert-succes">@Html.ActionLink("Export list to excel", "ExportExcel")</span>
                </div>
                <div class="col-lg-2">
                    <select class="form-control" data-val="true" id="Language" name="Language" onchange="this.form.submit()">
                        <option value="en-US">en-US</option>
                        <option value="ja-JP">ja-JP</option>
                        <option value="ko-KR">ko-KR</option>
                        <option value="th-TH">th-TH</option>
                        <option value="vi-VN">vi-VN</option>
                        <option value="zh-CN">zh-CN</option>
                        <option value="zh-TW">zh-TW</option>
                        <option value="zh-Hans">zh-Hans</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

}
<table class="table table-striped table-bordered table-condensed">
    <thead>
        <tr class="success">
            <th>
                #
            </th>
            <th>
                Trans.Time
            </th>
            <th>
                Username
            </th>
            <th>
                Choice
            </th>
            <th>
                Odds
            </th>
            <th>
                Stake
            </th>
            <th>
                Status
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var ticket in tickets)
        {
            rowIndex++;

            <tr>
                <td class="text-center">
                    @rowIndex
                </td>
                <td class="c">
                    @Html.Raw(builder.BuildTrans(ticket))
                </td>
                <td class="text-center">
                    @Html.Raw(builder.BuildUsername(ticket))
                </td>
                <td class="text-right">
                    @Html.Raw(builder.BuildChoice(ticket, ticketHelper, ticketData, isShowScoreMap))
                </td>
                <td class="text-center">
                    @Html.Raw(builder.BuildOdds(ticket, ticketData, funcGetOddsTypeName))
                </td>
                <td class="text-center">
                    @Html.Raw(builder.BuildStake(ticket))
                </td>
                <td class="text-center">
                    @Html.Raw(builder.BuildStatus(ticket, ticketHelper, ticketData, true))
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(function () {
        $("#Laguage").val(@Html.Raw("'" + Model.Language +"'"));
    });

    function showDetail(id) {
        var e = document.getElementById(id);
        if (e.style.display == 'block')
            e.style.display = 'none';
        else
            e.style.display = 'block';
    }
</script>