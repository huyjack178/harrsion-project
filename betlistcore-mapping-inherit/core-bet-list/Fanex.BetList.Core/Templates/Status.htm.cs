// <auto-generated />
#region!!!This file is auto-generated by TplBuilder, don't modify it manually!!!
using System;
using System.Web;
using System.Text;
using TplCore;
using TplCore.Element;
#pragma warning disable
namespace Fanex.BetList.Core
{
	using Templates;
	namespace Templates
	{
		public class Status_Template : Template
		{
			protected static string s0 = "<div class=\"status\">";
			public string result = "{result}";
			protected static string s1 = "</div>";
			public Status_StatusResult_Block StatusResult = new Status_StatusResult_Block();
			public Status_ShowIP_Block ShowIP = new Status_ShowIP_Block();
			public override void ToString(ref StringBuilder bd)
			{
				if(!Visible) return;
				if(RenderChild)
				{
					bd.Append(s0);
					bd.Append(result);
					bd.Append(s1);
					if(null != StatusResult) StatusResult.ToString(ref bd);
					if(null != ShowIP) ShowIP.ToString(ref bd);
				}
				if(IsAssigned){bd.Append(Value);}
			}
			public string ToString()
			{
				StringBuilder bd = new StringBuilder();
				ToString(ref bd);
				return bd.ToString();
			}

		}

		public class Status_StatusResult_Block: Block
		{
			protected static string s2 = "<div class=\"result\" onclick=\"ViewResult(";
			public string matchId = "{matchId}";
			protected static string s3 = ", ";
			public string race = "0";
			protected static string s4 = ", ";
			public string betType = "{betType}";
			protected static string s5 = ", ";
			public string sportType = "{sportType}";
			protected static string s6 = ", ";
			public string refNo = "{refNo}";
			protected static string s7 = ", '";
			public string userName = "{userName}";
			protected static string s8 = "', '";
			public string winlostDate = "{winlostDate}";
			protected static string s9 = "', ";
			public string refNo_MixParlay = "0";
			protected static string s10 = ", ";
			public string league = "{league}";
			protected static string s11 = ", ";
			public string isoutright = "0";
			protected static string s12 = ", ";
			public string betId = "0";
			protected static string s13 = ");\">";
			protected static string s14{get{return App_GlobalResources.CoreBetList.results;}}
			protected static string s15 = "</div>";
			public override void ToString(ref StringBuilder bd)
			{
				if(!Visible) return;
				if(RenderChild)
				{
					bd.Append(s2);
					bd.Append(matchId);
					bd.Append(s3);
					bd.Append(race);
					bd.Append(s4);
					bd.Append(betType);
					bd.Append(s5);
					bd.Append(sportType);
					bd.Append(s6);
					bd.Append(refNo);
					bd.Append(s7);
					bd.Append(userName);
					bd.Append(s8);
					bd.Append(winlostDate);
					bd.Append(s9);
					bd.Append(refNo_MixParlay);
					bd.Append(s10);
					bd.Append(league);
					bd.Append(s11);
					bd.Append(isoutright);
					bd.Append(s12);
					bd.Append(betId);
					bd.Append(s13);
					bd.Append(s14);
					bd.Append(s15);
				}
				if(IsAssigned){bd.Append(Value);}
			}
		}

		public class Status_ShowIP_Block: Block
		{
			protected static string s16 = "<div class=\"ip\"><br /><div class=\"";
			public string divIP = "iplink";
			protected static string s17 = "\" onclick=\"";
			public string openIpFunc = "OpenIPInfo";
			protected static string s18 = "('";
			public string betIp = "{betIp}";
			protected static string s19 = "');\">";
			protected string t0_betIp;
			protected static string s20 = "</div></div>";
			public override void ToString(ref StringBuilder bd)
			{
				if(!Visible) return;
				if(RenderChild)
				{
					bd.Append(s16);
					bd.Append(divIP);
					bd.Append(s17);
					bd.Append(openIpFunc);
					bd.Append(s18);
					bd.Append(betIp);
					bd.Append(s19);
					bd.Append(betIp);
					bd.Append(s20);
				}
				if(IsAssigned){bd.Append(Value);}
			}
		}

	}
}
#pragma warning enable
#endregion