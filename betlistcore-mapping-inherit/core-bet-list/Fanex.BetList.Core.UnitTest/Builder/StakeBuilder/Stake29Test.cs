// <auto-generated/>
namespace Fanex.BetList.Core.UnitTest.Builder.StakeBuilder
{
    using Fanex.BetList.Core.Builder.StakeBuilder;
    using Fanex.BetList.Core.Entities;
    using Fanex.BetList.Core.Templates;
    using Fanex.BetList.Core.UnitTest.Common;
    using Fanex.BetList.Core.UnitTest.Common.Enums;
    using NUnit.Framework;

    public class Stake29Test
    {
        private Stake29 _stake;
        private ITicket _ticket;

        [SetUp]
        public void Setup()
        {
            _stake = new Stake29();
            _ticket = TestData.CreateTicket(BetTypes.Handicap);
        }

        [Test]
        public void StakeIsZero_ReturnStakeIsTicketActualStake()
        {
            // Arrange
            var template = new Stake_Template();
            _ticket.Stake = 0;

            // Act
            template = _stake.Render(_ticket);

            // Assert
            string expectedTransTime = _ticket.ActualStake.ToString();
            Assert.AreEqual(expectedTransTime, template.stake);
        }

        [Test]
        public void StakeIsNotZero_ReturnStakeIsTicketActualStakeAndStakeInParenthese()
        {
            // Arrange
            var template = new Stake_Template();
            _ticket.Stake = 1;

            // Act
            template = _stake.Render(_ticket);

            // Assert
            string expectedTransTime = string.Format("{0}<br/>&nbsp;({1})", _ticket.ActualStake, _ticket.Stake);
            Assert.AreEqual(expectedTransTime, template.stake);
        }
    }
}