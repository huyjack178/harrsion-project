// <auto-generated/>
// --------------------------------------------------------------------------
// <copyright file="TicketHelperStub.cs" company="Nexcel Solutions Vietnam">
// Copyright (c) Nexcel Solutions Vietnam. All rights reserved.
// </copyright>
// --------------------------------------------------------------------------
// <history>
//   <change who="Edward.Nguyen" date="2014.5.17">Created</change>
// </history>

namespace Fanex.BetList.Core.UnitTest.Stubs
{
    using Fanex.BetList.Core.Entities;

    public class TicketHelperStub : ITicketHelper
    {
        private string _leagueName = "League";
        private string _teamName = "Team";
        private string _sportName = "Sport";
        private string _betTypeName = "Bet";
        private string _betTeamName = "BetTeam";
        private string _gameName = "Game";

        public int Index { get; set; }

        public string CurrentLanguage { get; set; }

        public bool IsShowOddsWithChoice { get; set; }

        public string ClientDetailSystemParlayFunction { get; set; }

        public string ClientSystemParlaySubbetsDetailFunction { get; set; }

        public string ClientMixParlaySubbetsDetailFunction { get; set; }

        public bool ShowBetType { get; set; }

        public bool ShowMatch { get; set; }

        public bool ShowLeague { get; set; }

        public bool ShowSystemParlayDetail { get; set; }

        public bool ShowSystemParlayPlayerComm { get; set; }

        public GetParlayTicketsById GetParlayDetailById { get; set; }

        public bool IsVnIp(string ip)
        {
            return ip == "vn-ip";
        }

        public string GetLeagueNameById(object leagueId)
        {
            return this._leagueName + leagueId.ToString();
        }

        public string GetTeamNameById(object teamId)
        {
            return this._teamName + teamId.ToString();
        }

        public string GetBetTypeNameById(object bettypeId)
        {
            return this._betTypeName + bettypeId.ToString();
        }

        public string GetParentIdByBetTypeId(object betTypeId, object defaultParentId = null)
        {
            return "Parent bet type of " + betTypeId.ToString();
        }

        public string GetBetTypeNameById(object bettypeId, object betId, object betCheck = null)
        {
            return this._betTypeName + bettypeId.ToString() + betId.ToString() + betCheck.ToString();
        }

        public string GetSportNameById(object sportId)
        {
            return this._sportName + sportId.ToString();
        }

        public string GetCasinoBetTeamNameById(object betteamId)
        {
            return this._betTeamName + betteamId.ToString();
        }

        public string GetHorseTeamNameById(object homeId, object awayId)
        {
            return this._teamName + homeId.ToString() + awayId.ToString();
        }

        public string GetRouletteBetItemNameById(object itemId)
        {
            return this._betTypeName + itemId.ToString();
        }

        public string GetCombinationMPOfferName(string key)
        {
            return this._betTeamName + key;
        }

        public string GetKenoBetChoiceName(string kenoBetChoiceID, out string kenoBettypeID)
        {
            kenoBettypeID = this._gameName + kenoBetChoiceID;

            return this._gameName + kenoBetChoiceID;
        }

        public string GetKenoBetTypeName(string kenoBettypeID)
        {
            return this._betTypeName + kenoBettypeID;
        }

        public string GetResourceData(string refNo, string resourceId)
        {
            return refNo + resourceId;
        }
    }
}